#!/system/bin/sh
# Adapted from tether script from andTether application
# Original Header:
# ----------------
# @Version=6
# Copyright 2008 parrothd
# Copyright 2009 zodiac (Markus Gutschke)

adhoclog="$2"/var/adhoc.log
mac_whitelist="$2"/conf/whitelist_mac.conf
dnsmasq_pidfile="$2"/var/dnsmasq.pid
dnsmasq_leasefile="$2"/var/dnsmasq.leases
dnsmasq="$2"/bin/dnsmasq
dnsmasq_conf="$2"/conf/dnsmasq.conf
dhcpclient_log="$2"/var/dhcp.log
iptables="$2"/bin/iptables
tiwlan_ini="$2"/conf/tiwlan.ini

really_kill() {
  kill "$1" || :
  kill -0 "$1" && {
    sleep 1
    kill -9 "$1"
  } || :
  kill -0 "$1" || {
    echo "Failed to kill process $1"
    false
  }
}

run() {
    if eval { "$1;" } >/dev/null 2>&1; then
      local i
      echo -n "<div class=\"date\">`date +"%d.%m.%y %T"`</div><div class=\"action\">$2...</div><div class=\"output\">" >>"$adhoclog"
      if i=`eval "$3" 2>&1`; then
        echo "</div><div class=\"done\">done</div><hr>" >>"$adhoclog"
      else
        { echo "$i" | while read i; do echo -n "$i<br />"; done
        echo "</div><div class=\"failed\">failed</div><hr>"; } >>"$adhoclog"
      fi
    fi
}

startwifi() {
    ## Stop current users
    stopwifi

    ## Loading wlan.ko module
    run '!({ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done)' \
        "Loading wlan.ko module" \
        'insmod /system/lib/modules/wlan.ko'

    ## Configuring WiFi
    run : \
        "Configuring WiFi interface" \
        'wlan_loader -f /system/etc/wifi/Fw1251r1c.bin -e /proc/calibration -i "$tiwlan_ini"'
}

stopwifi() {
    ## Stopping current users of the wifi interface
    run 'ps | while read u p pp v r w pc s n; do case "$n" in *dnsmasq*|*wpa_supplicant*|*dhcp*) break;; esac; false; done' \
        "Stopping current WiFi users" \
        '{ ps | while read u p pp v r w pc s n; do case "$n" in *dnsmasq*|*wpa_supplicant*|*dhcp*) really_kill "$p";; esac; done; :; }'

    ## Configuring WiFi
    run '{ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done' \
        "Configuring WiFi interface" \
        'wlan_loader tiwlan -f /system/etc/wifi/Fw1251r1c.bin -e /proc/calibration -i /system/etc/wifi/tiwlan.ini'

    # Unloading module/sys	
    run '{ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done' \
        "Unloading wlan.ko module" \
        'rmmod wlan'
}

reloadwificfg() {
	## Stopping current users of the wifi interface
    run 'ps | while read u p pp v r w pc s n; do case "$n" in *dnsmasq*|*wpa_supplicant*|*dhcp*) break;; esac; false; done' \
        "Stopping current WiFi users" \
        '{ ps | while read u p pp v r w pc s n; do case "$n" in *dnsmasq*|*wpa_supplicant*|*dhcp*) really_kill "$p";; esac; done; :; }'
	
	## Configuring WiFi
    run : \
        "Configuring WiFi interface" \
        'wlan_loader -f /system/etc/wifi/Fw1251r1c.bin -e /proc/calibration -i "$tiwlan_ini"'
}

startint_server() {
    # Configuring network interface
    run '{ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done' \
        "Configuring network interface" \
        #'ifconfig tiwlan0 192.168.2.4 netmask 255.255.255.0 && ifconfig tiwlan0 up'
        'ifconfig tiwlan0 up'
}

startint_client() {
    # Configuring network interface
    run '{ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done' \
        "Configuring network interface" \
        'ifconfig tiwlan0 dhcp && ifconfig tiwlan0 up'
    
    sleep 5
    dhcpcd tiwlan0 2> "$dhcpclient_log"
}

stopint() {
    # Shutting down network interface
    run '{ echo; lsmod; } | while read m; do case "$m" in wlan*) break;; esac; false; done' \
        "Shutting down network interface" \
        'ifconfig tiwlan0 down'
}


case "$1" in
'start_wifi')
    startwifi
    startint_server
#    startipt
#    startipfw
#    startdnsmasq
#    startsecnat
#    startmacwhitelist
;;
'reload_cfg')	
	reloadwificfg
#    startwifi
#    startint_server
#    startipt
#    startipfw
#    startdnsmasq
#    startsecnat
#    startmacwhitelist
;;
'stop_wifi')
    stopint
    stopwifi
#    startipt
#    startipfw
#    startdnsmasq
#    startsecnat
#    startmacwhitelist
;;
*)
echo "Usage: $0 [start|stop] [directory]"
;;
esac